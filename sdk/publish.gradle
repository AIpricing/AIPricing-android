apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'ai.aipricing'
version '2.2'

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/sdk-release.aar")
            groupId
            artifactId 'sdk'
            version this.version
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user='none'
    key='none'

    publications = ['Production']
    configurations = ['archives']
    override = true
    pkg {
        repo = 'maven'
        name = 'sdk'
        userOrg = 'aipricing'
        desc = "AIPricing android SDK."
        websiteUrl = 'https://aipricing.ai'
        labels = ['AIPricing','AI Pricing','Android','SDK','API']
        publish = true
        publicDownloadNumbers = false
        licenses = ['MIT']
        vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
        dryRun = false
        version {
            name = this.version
            desc = "AIPricing android SDK ${this.version}"
            released = new Date()
            vcsTag = this.version
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath = configurations.compile
    classpath += configurations.javadocDeps
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}